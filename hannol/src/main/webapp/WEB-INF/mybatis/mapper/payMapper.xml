<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="pay">
	<select id="seq" resultType="Integer">
			SELECT payment_seq.NEXTVAL FROM dual
	</select>

	<select id="couponCount" parameterType="map" resultType="Integer">
		SELECT NVL(COUNT(*),0) 
		FROM coupon
		<![CDATA[
			WHERE usersCode = #{usersCode} 
				AND state = 0 
				AND endDate >= #{curDate}
		]]>
	</select>

	<insert id="insertPay" parameterType="com.sp.pay.Pay">
		INSERT INTO payment(payCode, price, dcPrice, usersCode)
		VALUES(#{payCode}, #{price}, #{dcPrice}, #{usersCode})
	</insert>
	
	<insert id="insertPayInfo" parameterType="com.sp.pay.Pay">
		INSERT INTO payInfo(payCode, payWay, payPrice)
		VALUES(#{payCode}, #{payWay}, #{payPrice})
	</insert>
	
	<insert id="insertCardInfo" parameterType="com.sp.pay.Pay">
		INSERT INTO cardInfo(payCode, cardCo, cardNum, state, paySection)
		VALUES(#{payCode}, #{cardCo}, #{cardNum}, #{state}, #{paySection})
	</insert>
	
	<update id="insertPaymentInfo" parameterType="com.sp.pay.Pay">
		INSERT INTO paymentInfo(paymentCode, payCode, goodsCode, quantity)
		SELECT paymentInfo_seq.NEXTVAL, a.*
		FROM(
		<foreach collection="plist" item="plist" index="index" separator=" UNION ALL " close=")a">
			SELECT #{payCode}, #{plist.goodsCode}, #{plist.quantity}
			FROM DUAL
		</foreach>
	</update>
	
	<update id="insertGift" parameterType="com.sp.pay.Pay">
		INSERT INTO gift(giftCode, endDate, payCode, goodsCode)
		SELECT gift_seq.NEXTVAL, a.*
		FROM(
		<foreach collection="plist" item="plist" index="index" separator=" UNION ALL " close=")a">
			SELECT #{plist.endDate}, #{payCode}, #{plist.goodsCode}
			FROM dual
		</foreach>
	</update>
	
	<delete id="deleteCart" parameterType="com.sp.pay.Pay">
		DELETE 
		FROM cart 
		WHERE cartCode IN (
		<foreach collection="plist" item="plist" separator=",">
			#{plist.cartCode}
		</foreach>
		)
		
	</delete>

	<select id="readResult" parameterType="Integer" resultType="com.sp.pay.Pay">
    	SELECT TO_CHAR(payDate,'YYYY-MM-DD') payDate, price, dcPrice, payPrice, cardCo, cardNum 
	    FROM payment pm
   		JOIN payInfo pi ON pm.payCode = pi.payCode
    	JOIN cardInfo ci ON pm.payCode = ci.payCode
		WHERE pm.payCode = #{payCode}
	</select>
	
	<select id="paylist" parameterType="map" resultType="com.sp.pay.Paylist">
		SELECT * FROM(
			SELECT p.payCode, payDate, payWay, payPrice, 
    		quantity, goodsName, gs.price, gubunName, parentCode,
    		DENSE_RANK() OVER(ORDER BY TO_CHAR(payDate,'YYYY-MM-DD') DESC) rnum
			FROM payment p
			JOIN payInfo pi ON p.payCode = pi.payCode
			JOIN paymentInfo pmi ON p.payCode = pmi.payCode 
			JOIN goods gs ON pmi.goodsCode = gs.goodsCode
			JOIN goodsGubun gg ON gs.gubunCode = gg.gubunCode
			WHERE usersCode = #{usersCode}
		)
		<![CDATA[
		WHERE  rnum >= #{start} AND rnum <= #{end} 
		ORDER BY payDate DESC
		]]>
	</select>
	
	<select id="dataCount" parameterType="map" resultType="Integer">
		SELECT COUNT(*) FROM(
    		SELECT TO_CHAR(payDate,'YYYY-MM-DD') payDate 
    		FROM payment
   			WHERE usersCode = #{usersCode}
    		GROUP BY TO_CHAR(payDate,'YYYY-MM-DD')
    		ORDER BY payDate
		)
	</select>
	
</mapper> 